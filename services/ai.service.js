const aiClient = require("../clients/ai.client")
const aiConstants = require("../constants/ai.constants")
const { AiTextCompletion } = require("../database/models/aiCompletions.model")

/**
 * Finds completion history, then posts to client to generate a completion based on prompt and user-defined system messages.
 */
const generateAiResponse = async (prompt, userId) => {
  try {
    const systemMessages = aiConstants.SYSTEM_MESSAGES
    const history = await _getRecentHistory(userId)

    let completion, response

    if (process.env.MOCK_AI_CLIENT === "true") {
      completion = {
        id: Math.random(200),
        model: "gpt-4o-mini-2024-07-18",
        usage: {
          prompt_tokens: 50,
          completion_tokens: 100
        }
      }
      response = "This is a mock reply to simulate being generated by AI"
    } else {
      completion = await aiClient.generateAiResponse(prompt, history, systemMessages)
      response = completion.choices[0].message.content
    }

    const completionPayload = {
      completionId: completion.id,
      userId,
      model: completion.model,
      prompt,
      response,
      promptTokens: completion.usage.prompt_tokens,
      completionTokens: completion.usage.completion_tokens
    }
    const dbInsertResult = await AiTextCompletion.create(completionPayload)

    const responsePayload = {
      dateTime: dbInsertResult.createdAt,
      prompt,
      response
    }
    return {
      success: true,
      message: "AI response generated successfully.",
      aiCompletion: responsePayload
    }
  } catch (err) {
    console.log("Error generating AI response.", err)
    return {
      success: false,
      message: err?.message || "Error generating AI response."
    }
  }
}

const _getRecentHistory = async (userId) => {
  const completions = await AiTextCompletion.findAll({
    where: { userId },
    limit: 10,
    order: [["createdAt", "ASC"]]
  })

  const history = completions.reduce((acc, completion) => {
    if (completion.prompt != null) acc.push({ role: "user", content: completion.prompt })
    if (completion.response != null) acc.push({ role: "assistant", content: completion.response })
    return acc
  }, [])

  return history
}

module.exports = {
  generateAiResponse
}
